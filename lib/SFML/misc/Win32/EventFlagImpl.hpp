#ifndef SFML_EVENTFLAGIMPL_HPP
#define SFML_EVENTFLAGIMPL_HPP

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML/System/NonCopyable.hpp>
#include <windows.h>

namespace sf
{
namespace priv
{
////////////////////////////////////////////////////////////
/// \brief Windows implementation of event flags
////////////////////////////////////////////////////////////
class EventFlagImpl : NonCopyable
{
public:
    ////////////////////////////////////////////////////////////
    /// \brief constructor
    ///
    ////////////////////////////////////////////////////////////
    EventFlagImpl(bool state=false);

    ////////////////////////////////////////////////////////////
    /// \brief Destructor
    ///
    ////////////////////////////////////////////////////////////
    ~EventFlagImpl();

    ////////////////////////////////////////////////////////////
    /// \brief Wait the event flag
    ///
    ////////////////////////////////////////////////////////////
    void wait(unsigned int timeout);

    ////////////////////////////////////////////////////////////
    /// \brief Signal the event flag
    ///
    ////////////////////////////////////////////////////////////
    void signal();

private:
    ////////////////////////////////////////////////////////////
    // Member data
    ////////////////////////////////////////////////////////////
    HANDLE m_evantflag; ///< Win32 handle of the event flag
};

} // namespace priv
    
} // namespace sf

#endif // SFML_EVENTFLAGIMPL_HPP